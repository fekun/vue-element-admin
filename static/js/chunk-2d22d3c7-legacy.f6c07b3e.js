(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d22d3c7"],{f744:function(e,n,t){"use strict";t.r(n);var a=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{staticClass:"app-container"},[t("el-tabs",{model:{value:e.activeName,callback:function(n){e.activeName=n},expression:"activeName"}},[t("el-tab-pane",{attrs:{label:"use clipboard  directly",name:"directly"}},[t("el-input",{staticStyle:{width:"400px","max-width":"100%"},attrs:{placeholder:"Please input"},model:{value:e.inputData,callback:function(n){e.inputData=n},expression:"inputData"}}),e._v(" "),t("el-button",{attrs:{type:"primary",icon:"document"},on:{click:function(n){return e.handleCopy(e.inputData,n)}}},[e._v("\n        copy\n      ")])],1),e._v(" "),t("el-tab-pane",{attrs:{label:"use clipboard by v-directive",name:"v-directive"}},[t("el-input",{staticStyle:{width:"400px","max-width":"100%"},attrs:{placeholder:"Please input"},model:{value:e.inputData,callback:function(n){e.inputData=n},expression:"inputData"}}),e._v(" "),t("el-button",{directives:[{name:"clipboard",rawName:"v-clipboard:copy",value:e.inputData,expression:"inputData",arg:"copy"},{name:"clipboard",rawName:"v-clipboard:success",value:e.clipboardSuccess,expression:"clipboardSuccess",arg:"success"}],attrs:{type:"primary",icon:"document"}},[e._v("\n        copy\n      ")])],1)],1),e._v(" "),t("ClipBoard",{attrs:{code:e.code,"related-link":e.relatedLink}})],1)},i=[],c=t("f71e"),r=t("b311");if(!r)throw new Error("you should npm install `clipboard` --save at first ");var l={bind:function(e,n){if("success"===n.arg)e._v_clipboard_success=n.value;else if("error"===n.arg)e._v_clipboard_error=n.value;else{var t=new r(e,{text:function(){return n.value},action:function(){return"cut"===n.arg?"cut":"copy"}});t.on("success",function(n){var t=e._v_clipboard_success;t&&t(n)}),t.on("error",function(n){var t=e._v_clipboard_error;t&&t(n)}),e._v_clipboard=t}},update:function(e,n){"success"===n.arg?e._v_clipboard_success=n.value:"error"===n.arg?e._v_clipboard_error=n.value:(e._v_clipboard.text=function(){return n.value},e._v_clipboard.action=function(){return"cut"===n.arg?"cut":"copy"})},unbind:function(e,n){"success"===n.arg?delete e._v_clipboard_success:"error"===n.arg?delete e._v_clipboard_error:(e._v_clipboard.destroy(),delete e._v_clipboard)}},o=function(e){e.directive("Clipboard",l)};window.Vue&&(window.clipboard=l,Vue.use(o)),l.install=o;var s=l,p=t("1fb2"),u={name:"ClipboardDemo",directives:{clipboard:s},components:{ClipBoard:p["a"]},data:function(){return{activeName:"directly",inputData:"https://github.com/PanJiaChen/vue-element-admin",relatedLink:[{title:"@/utils/clipboard",link:"https://github.com/PanJiaChen/vue-element-admin/tree/master/src/utils"},{title:"@/directive/clipboard/index.js",link:"https://github.com/PanJiaChen/vue-element-admin/tree/master/src/directive/clipboard"}],code:'\n<template>\n  <div class="app-container">\n    <el-tabs v-model="activeName">\n      <el-tab-pane\n        label="use clipboard  directly"\n        name="directly"\n      >\n        <el-input\n          v-model="inputData"\n          placeholder="Please input"\n          style="width:400px;max-width:100%;"\n        />\n        <el-button\n          type="primary"\n          icon="document"\n          @click="handleCopy(inputData,$event)"\n        >\n          copy\n        </el-button>\n      </el-tab-pane>\n      <el-tab-pane\n        label="use clipboard by v-directive"\n        name="v-directive"\n      >\n        <el-input\n          v-model="inputData"\n          placeholder="Please input"\n          style="width:400px;max-width:100%;"\n        />\n        <el-button\n          v-clipboard:copy="inputData"\n          v-clipboard:success="clipboardSuccess"\n          type="primary"\n          icon="document"\n        >\n          copy\n        </el-button>\n      </el-tab-pane>\n    </el-tabs>\n  </div>\n</template>\n\n<script>\nimport clip from \'@/utils/clipboard\' // use clipboard directly\nimport clipboard from \'@/directive/clipboard/index.js\' // use clipboard by v-directive\n\nexport default {\n  name: \'ClipboardDemo\',\n  directives: {\n    clipboard\n  },\n  data () {\n    return {\n      activeName: \'directly\',\n      inputData: \'https://github.com/PanJiaChen/vue-element-admin\'\n    }\n  },\n  methods: {\n    handleCopy (text, event) {\n      clip(text, event)\n    },\n    clipboardSuccess () {\n      this.$message({\n        message: \'Copy successfully\',\n        type: \'success\',\n        duration: 1500\n      })\n    }\n  }\n}\n<//script>\n\n      '}},methods:{handleCopy:function(e,n){Object(c["a"])(e,n)},clipboardSuccess:function(){this.$message({message:"Copy successfully",type:"success",duration:1500})}}},d=u,b=t("2877"),v=Object(b["a"])(d,a,i,!1,null,null,null);n["default"]=v.exports}}]);