(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d22d3c7"],{f744:function(e,t,a){"use strict";a.r(t);var n=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"app-container"},[a("el-tabs",{model:{value:e.activeName,callback:function(t){e.activeName=t},expression:"activeName"}},[a("el-tab-pane",{attrs:{label:"use clipboard  directly",name:"directly"}},[a("el-input",{staticStyle:{width:"400px","max-width":"100%"},attrs:{placeholder:"Please input"},model:{value:e.inputData,callback:function(t){e.inputData=t},expression:"inputData"}}),e._v(" "),a("el-button",{attrs:{type:"primary",icon:"document"},on:{click:function(t){return e.handleCopy(e.inputData,t)}}},[e._v("\n        copy\n      ")])],1),e._v(" "),a("el-tab-pane",{attrs:{label:"use clipboard by v-directive",name:"v-directive"}},[a("el-input",{staticStyle:{width:"400px","max-width":"100%"},attrs:{placeholder:"Please input"},model:{value:e.inputData,callback:function(t){e.inputData=t},expression:"inputData"}}),e._v(" "),a("el-button",{directives:[{name:"clipboard",rawName:"v-clipboard:copy",value:e.inputData,expression:"inputData",arg:"copy"},{name:"clipboard",rawName:"v-clipboard:success",value:e.clipboardSuccess,expression:"clipboardSuccess",arg:"success"}],attrs:{type:"primary",icon:"document"}},[e._v("\n        copy\n      ")])],1)],1),e._v(" "),a("ClipBoard",{attrs:{code:e.code,"related-link":e.relatedLink}})],1)},i=[],c=a("f71e");const r=a("b311");if(!r)throw new Error("you should npm install `clipboard` --save at first ");var l={bind(e,t){if("success"===t.arg)e._v_clipboard_success=t.value;else if("error"===t.arg)e._v_clipboard_error=t.value;else{const a=new r(e,{text(){return t.value},action(){return"cut"===t.arg?"cut":"copy"}});a.on("success",t=>{const a=e._v_clipboard_success;a&&a(t)}),a.on("error",t=>{const a=e._v_clipboard_error;a&&a(t)}),e._v_clipboard=a}},update(e,t){"success"===t.arg?e._v_clipboard_success=t.value:"error"===t.arg?e._v_clipboard_error=t.value:(e._v_clipboard.text=function(){return t.value},e._v_clipboard.action=function(){return"cut"===t.arg?"cut":"copy"})},unbind(e,t){"success"===t.arg?delete e._v_clipboard_success:"error"===t.arg?delete e._v_clipboard_error:(e._v_clipboard.destroy(),delete e._v_clipboard)}};const o=function(e){e.directive("Clipboard",l)};window.Vue&&(window.clipboard=l,Vue.use(o)),l.install=o;var s=l,p=a("1fb2"),d={name:"ClipboardDemo",directives:{clipboard:s},components:{ClipBoard:p["a"]},data(){return{activeName:"directly",inputData:"https://github.com/PanJiaChen/vue-element-admin",relatedLink:[{title:"@/utils/clipboard",link:"https://github.com/PanJiaChen/vue-element-admin/tree/master/src/utils"},{title:"@/directive/clipboard/index.js",link:"https://github.com/PanJiaChen/vue-element-admin/tree/master/src/directive/clipboard"}],code:'\n<template>\n  <div class="app-container">\n    <el-tabs v-model="activeName">\n      <el-tab-pane\n        label="use clipboard  directly"\n        name="directly"\n      >\n        <el-input\n          v-model="inputData"\n          placeholder="Please input"\n          style="width:400px;max-width:100%;"\n        />\n        <el-button\n          type="primary"\n          icon="document"\n          @click="handleCopy(inputData,$event)"\n        >\n          copy\n        </el-button>\n      </el-tab-pane>\n      <el-tab-pane\n        label="use clipboard by v-directive"\n        name="v-directive"\n      >\n        <el-input\n          v-model="inputData"\n          placeholder="Please input"\n          style="width:400px;max-width:100%;"\n        />\n        <el-button\n          v-clipboard:copy="inputData"\n          v-clipboard:success="clipboardSuccess"\n          type="primary"\n          icon="document"\n        >\n          copy\n        </el-button>\n      </el-tab-pane>\n    </el-tabs>\n  </div>\n</template>\n\n<script>\nimport clip from \'@/utils/clipboard\' // use clipboard directly\nimport clipboard from \'@/directive/clipboard/index.js\' // use clipboard by v-directive\n\nexport default {\n  name: \'ClipboardDemo\',\n  directives: {\n    clipboard\n  },\n  data () {\n    return {\n      activeName: \'directly\',\n      inputData: \'https://github.com/PanJiaChen/vue-element-admin\'\n    }\n  },\n  methods: {\n    handleCopy (text, event) {\n      clip(text, event)\n    },\n    clipboardSuccess () {\n      this.$message({\n        message: \'Copy successfully\',\n        type: \'success\',\n        duration: 1500\n      })\n    }\n  }\n}\n<//script>\n\n      '}},methods:{handleCopy(e,t){Object(c["a"])(e,t)},clipboardSuccess(){this.$message({message:"Copy successfully",type:"success",duration:1500})}}},u=d,b=a("2877"),v=Object(b["a"])(u,n,i,!1,null,null,null);t["default"]=v.exports}}]);